<?xml version="1.0" ?>
<math type="pom-exported">
  <expression prime-tag="sequence">
    <term prime-tag="letter" secondary-tags="Latin">S</term>
    <expression prime-tag="underscore" secondary-tags="subscript_operation">
      <term prime-tag="alphanumeric">EH</term>
    </expression>
    <term prime-tag="equals">=</term>
    <expression prime-tag="fraction">
      <term prime-tag="digit" secondary-tags="numeric">1</term>
      <expression prime-tag="sequence" secondary-tags="denominator">
        <term prime-tag="letter" secondary-tags="Latin">G</term>
        <expression prime-tag="underscore" secondary-tags="subscript_operation">
          <term prime-tag="digit" secondary-tags="numeric">3</term>
        </expression>
      </expression>
    </expression>
    <term prime-tag="operator">\int</term>
    <term prime-tag="letter" secondary-tags="Latin">d</term>
    <expression prime-tag="caret" secondary-tags="superscript_operation">
      <term prime-tag="digit" secondary-tags="numeric">3</term>
    </expression>
    <term prime-tag="letter" secondary-tags="Latin">x</term>
    <term prime-tag="controlled space">\,</term>
    <expression prime-tag="square root">
      <expression prime-tag="sequence" secondary-tags="radicand">
        <term prime-tag="minus">-</term>
        <term prime-tag="letter" secondary-tags="Latin">g</term>
        <expression prime-tag="caret" secondary-tags="superscript_operation">
          <expression prime-tag="sequence" secondary-tags="superscript">
            <term prime-tag="left parenthesis" secondary-tags="opening delimiter">(</term>
            <term prime-tag="digit" secondary-tags="numeric">3</term>
            <term prime-tag="right parenthesis" secondary-tags="closing delimiter">)</term>
          </expression>
        </expression>
      </expression>
    </expression>
    <term prime-tag="controlled space">\,</term>
    <term prime-tag="left parenthesis" secondary-tags="opening delimiter">(</term>
    <term prime-tag="letter" secondary-tags="Latin">R</term>
    <expression prime-tag="caret" secondary-tags="superscript_operation">
      <expression prime-tag="sequence" secondary-tags="superscript">
        <term prime-tag="left parenthesis" secondary-tags="opening delimiter">(</term>
        <term prime-tag="digit" secondary-tags="numeric">3</term>
        <term prime-tag="right parenthesis" secondary-tags="closing delimiter">)</term>
      </expression>
    </expression>
    <term prime-tag="plus">+</term>
    <expression prime-tag="sequence">
      <term prime-tag="latex-command">\cal</term>
      <term prime-tag="letter" secondary-tags="Latin">L</term>
    </expression>
    <expression prime-tag="underscore" secondary-tags="subscript_operation">
      <expression prime-tag="sequence" secondary-tags="subscript">
        <term prime-tag="latex-command">\rm</term>
        <term prime-tag="alphanumeric">matter</term>
      </expression>
    </expression>
    <term prime-tag="right parenthesis" secondary-tags="closing delimiter">)</term>
  </expression>
</math>