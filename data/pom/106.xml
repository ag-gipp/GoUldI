<?xml version="1.0" ?>
<math type="pom-exported">
  <expression prime-tag="sequence">
    <term prime-tag="letter" secondary-tags="Latin">P</term>
    <term prime-tag="left parenthesis" secondary-tags="opening delimiter">(</term>
    <term prime-tag="letter" secondary-tags="Latin">z</term>
    <term prime-tag="right parenthesis" secondary-tags="closing delimiter">)</term>
    <term prime-tag="equals">=</term>
    <term prime-tag="operator">\prod</term>
    <expression prime-tag="subsuperscript">
      <expression prime-tag="caret" secondary-tags="superscript_operation">
        <term prime-tag="ordinary">\infty</term>
      </expression>
      <expression prime-tag="underscore" secondary-tags="subscript_operation">
        <expression prime-tag="sequence" secondary-tags="subscript">
          <term prime-tag="letter" secondary-tags="Latin">n</term>
          <term prime-tag="equals">=</term>
          <term prime-tag="digit" secondary-tags="numeric">1</term>
        </expression>
      </expression>
    </expression>
    <expression prime-tag="balanced-expression">
      <term prime-tag="left-delimiter">\left(</term>
      <expression prime-tag="sequence">
        <term prime-tag="digit" secondary-tags="numeric">1</term>
        <term prime-tag="minus">-</term>
        <expression prime-tag="fraction">
          <term prime-tag="letter" secondary-tags="Latin">z</term>
          <expression prime-tag="sequence" secondary-tags="denominator">
            <term prime-tag="letter" secondary-tags="Latin">z</term>
            <expression prime-tag="underscore" secondary-tags="subscript_operation">
              <term prime-tag="letter" secondary-tags="Latin">n</term>
            </expression>
          </expression>
        </expression>
      </expression>
      <term prime-tag="right-delimiter">\right)</term>
    </expression>
    <term prime-tag="letter" secondary-tags="Latin">e</term>
    <expression prime-tag="caret" secondary-tags="superscript_operation">
      <expression prime-tag="sequence" secondary-tags="superscript">
        <term prime-tag="letter" secondary-tags="Latin">z</term>
        <term prime-tag="forward slash">/</term>
        <term prime-tag="letter" secondary-tags="Latin">z</term>
        <expression prime-tag="underscore" secondary-tags="subscript_operation">
          <term prime-tag="letter" secondary-tags="Latin">n</term>
        </expression>
      </expression>
    </expression>
  </expression>
</math>